–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–µ–¥—É—â–∏–π) –æ—Ç–ø—Ä–∞–≤–ª—è–ª –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–ø–æ—Å—Ç–æ—è–ª—å—Ü—ã) –º–æ–≥–ª–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–æ—Ç–æ–∫, –≤–∞–º –Ω—É–∂–Ω–æ –≤–Ω–µ—Å—Ç–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –º–æ–¥—É–ª–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫–∞.

–í–æ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:

### 1. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–†–∞–∑–¥–µ–ª–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –≤–µ–¥—É—â–∏—Ö –∏ –∑—Ä–∏—Ç–µ–ª–µ–π. –í–µ–¥—É—â–∏–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫, –∞ –∑—Ä–∏—Ç–µ–ª–∏ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –µ–≥–æ.

### 2. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ WebSocket `websocketHandler`

–í –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ WebSocket –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–ª–∏–µ–Ω—Ç –≤–µ–¥—É—â–∏–º –∏–ª–∏ –∑—Ä–∏—Ç–µ–ª–µ–º. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Ñ–ª–∞–≥–∞.

### 3. –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–æ–≥–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤

–ò–∑–º–µ–Ω–∏—Ç–µ –ª–æ–≥–∏–∫—É —Ç–∞–∫, —á—Ç–æ–±—ã —Ç–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –æ—Ç–ø—Ä–∞–≤–ª—è–ª –≤–∏–¥–µ–æ–¥–∞–Ω–Ω—ã–µ, –∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ—Ä–µ–∂–∏–º–æ–≤ –¥–ª—è –∑—Ä–∏—Ç–µ–ª–µ–π.

### –ü—Ä–∏–º–µ—Ä –∏–∑–º–µ–Ω–µ–Ω–∏–π

–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã –º–æ–∂–µ—Ç–µ —ç—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å:

1. **–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:**

```go
type userType int

const (
    viewer userType = iota
    broadcaster
)

type user struct {
    conn      *threadSafeWriter
    userType  userType
}
```

2. **–ò–∑–º–µ–Ω–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:**

–¢–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–æ `peerConnections` –≤—ã –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

```go
var (
    listLock sync.RWMutex
    users     []user
)
```

3. **–û–±–Ω–æ–≤–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ `websocketHandler`:**

```go
func websocketHandler(w http.ResponseWriter, r *http.Request) {
    unsafeConn, err := upgrader.Upgrade(w, r, nil)
    if err != nil {
        log.Print("upgrade:", err)
        return
    }

    c := &threadSafeWriter{unsafeConn, sync.Mutex{}}
    defer c.Close()

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—Ç–æ —ç—Ç–æ - –≤–µ–¥—É—â–∏–π –∏–ª–∏ –∑—Ä–∏—Ç–µ–ª—å.
    var uType userType
    if len(users) == 0 {
        // –ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤–µ–¥—É—â–∏–º
        uType = broadcaster
    } else {
        uType = viewer  // –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑—Ä–∏—Ç–µ–ª–∏
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫
    listLock.Lock()
    users = append(users, user{conn: c, userType: uType})
    listLock.Unlock()

    // –ï—Å–ª–∏ —ç—Ç–æ –≤–µ–¥—É—â–∏–π, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫
    if uType == broadcaster {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π PeerConnection
        // –í–µ—Å—å –ø–æ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å
        peerConnection, err := webrtc.NewPeerConnection(webrtc.Configuration{})
        if err != nil {
            log.Print(err)
            return
        }
        defer peerConnection.Close()

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–µ–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ
        // –û—Å—Ç–∞–≤–∏–º –≤–∞—à—É —Ç–µ–∫—É—â—É—é –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ
        peerConnection.OnTrack(func(t *webrtc.TrackRemote, _ *webrtc.RTPReceiver) {
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç—Ä–µ–∫
            trackLocal := addTrack(t)
            defer removeTrack(trackLocal)

            // –ß—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å RTP-–ø–∞–∫–µ—Ç–æ–≤
            buf := make([]byte, 1500)
            rtpPkt := &rtp.Packet{}
            for {
                i, _, err := t.Read(buf)
                if err != nil {
                    return
                }

                if err = rtpPkt.Unmarshal(buf[:i]); err != nil {
                    log.Println(err)
                    return
                }

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º RTP-–ø–∞–∫–µ—Ç—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –≤–µ–¥—É—â–∏–π
                if err = trackLocal.WriteRTP(rtpPkt); err != nil {
                    return
                }
            }
        })

        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è ICE –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º –∏ –¥—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è

    } else {
        // –ï—Å–ª–∏ —ç—Ç–æ –∑—Ä–∏—Ç–µ–ª—å, –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        for {
            _, raw, err := c.ReadMessage()
            if err != nil {
                log.Println(err)
                return
            }
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∑—Ä–∏—Ç–µ–ª–µ–π
        }
    }
}
```

4. **–ò–∑–º–µ–Ω–∏—Ç–µ –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ ICE –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (offer)**

–ö–æ–≥–¥–∞ –≤–µ–¥—É—â–∏–π –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è, –æ–Ω —Å–æ–∑–¥–∞–µ—Ç `offer` –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (–∑—Ä–∏—Ç–µ–ª—è–º), —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ. –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é –ª–æ–≥–∏–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞—á–∏ `offer`.

### 4. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π

- –ó—Ä–∏—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, ICE –∫–∞–Ω–¥–∏–¥–∞—Ç—ã) –æ—Ç –≤–µ–¥—É—â–µ–≥–æ, –∏ –≤–∞–º –Ω—É–∂–Ω–æ —ç—Ç–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –≤–µ–¥—É—â–µ–≥–æ.

### 5. –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–µ

–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤—ã –ø—Ä–æ–≤–µ—Ä—è–µ—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑—Ä–∏—Ç–µ–ª–µ–º –∏–ª–∏ –≤–µ–¥—É—â–∏–º, –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç–µ –ª–æ–≥–∏–∫—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞.

### –ó–∞–∫–ª—é—á–µ–Ω–∏–µ

–° –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏, –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ –≤—ã—à–µ, —É –≤–∞—Å –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—é—â–∏–π –ø—Ä–∏–º–µ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî –≤–µ–¥—É—â–∏–π ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫, –∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Äî –∑—Ä–∏—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–æ—Ç–æ–∫. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É "–æ–¥–∏–Ω –∫ –º–Ω–æ–≥–∏–º" –¥–ª—è –ø–æ—Ç–æ–∫–æ–≤–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –≤–∏–¥–µ–æ. üé•üë•


/// –°—Ç–∞—Ä—ã–π –∫–æ–¥:
–≠—Ç–æ—Ç –∫–æ–¥ —Å–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç WebRTC –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –º–µ–¥–∏–∞ (SFU). –û–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ PeerConnection, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏ –ø–æ–ª—É—á–∞–µ—Ç RTP –ø–æ—Ç–æ–∫–∏, –∞ —Ç–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—é ICE –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ–¥–∏–∞. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. üé•‚ú®
///